(window.webpackJsonp=window.webpackJsonp||[]).push([[145],{685:function(t,s,n){"use strict";n.r(s);var a=n(19),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"文档部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文档部署"}},[t._v("#")]),t._v(" 文档部署")]),t._v(" "),s("h3",{attrs:{id:"文档构建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文档构建"}},[t._v("#")]),t._v(" 文档构建")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("文档放置在项目的 "),s("code",[t._v("docs")]),t._v(" 目录中，使用的是默认的构建输出位置；")])]),t._v(" "),s("li",[s("p",[t._v("配置npm scripts；")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{\n  "scripts": {\n    "docs:build": "vuepress build docs"\n  }\n}\n')])])])]),t._v(" "),s("li",[s("p",[t._v("运行"),s("code",[t._v("npm run docs:build")]),t._v("，生成静态文件位于"),s("code",[t._v("docs/.vuepress/dist")]),t._v("下。")])])]),t._v(" "),s("h3",{attrs:{id:"github-pages"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-pages"}},[t._v("#")]),t._v(" GitHub Pages")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("先将文档项目push到GitHub仓库（xqh-vue-ui-doc）；")])]),t._v(" "),s("li",[s("p",[t._v("在 "),s("code",[t._v("docs/.vuepress/config.js")]),t._v(" 中设置正确的 "),s("code",[t._v("base")]),t._v("；")]),t._v(" "),s("ul",[s("li",[t._v("如果打算发布到 "),s("code",[t._v("https://<USERNAME>.github.io/")]),t._v("，则可以省略这一步，因为 "),s("code",[t._v("base")]),t._v(" 默认即是 "),s("code",[t._v('"/"')]),t._v("；")]),t._v(" "),s("li",[t._v("如果打算发布到 "),s("code",[t._v("https://<USERNAME>.github.io/<REPO>/")]),t._v("（也就是说仓库在 "),s("code",[t._v("https://github.com/<USERNAME>/<REPO>")]),t._v("），则将 "),s("code",[t._v("base")]),t._v(" 设置为 "),s("code",[t._v('"/<REPO>/"')]),t._v("。")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("base: '/xqh-vue-ui-doc/'\n")])])])]),t._v(" "),s("li",[s("p",[t._v("在项目根目录创建"),s("code",[t._v("deploy.sh")]),t._v(" 文件；")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 部署到GitHub Pages\n\n#! /bin/bash\n\n# 确保脚本抛出遇到的错误\nset -e\n\n# 生成静态文件\nnpm run docs:build\n\n# 进入生成的文件夹\ncd docs/.vuepress/dist\n\ngit init\ngit add -A\ngit commit -m '部署静态页面'\n\n# 如果发布到 https://<USERNAME>.github.io\n# git push -f git@github.com:<USERNAME>/<USERNAME>.github.io.git master\n\n# 如果发布到 https://<USERNAME>.github.io/<REPO>\n# git push -f git@github.com:<USERNAME>/<REPO>.git master:gh-pages\n\ngit push -f git@github.com:lanyuxqh/xqh-vue-ui-doc.git master:gh-pages\n\ncd -\n")])])])]),t._v(" "),s("li",[s("p",[t._v("配置npm scripts；")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{\n  "scripts": {\n    "deploy": "sh deploy.sh"\n  }\n}\n')])])])]),t._v(" "),s("li",[s("p",[t._v("运行"),s("code",[t._v("npm run deploy")]),t._v("，把静态文件推送到远端仓库的gh-pages分支下，就可以通过"),s("code",[t._v("https://lanyuxqh.github.io/xqh-vue-ui-doc/")]),t._v("访问文档啦。每次写完文章去执行 "),s("code",[t._v("npm run deploy")]),t._v(" 这行命令就可以了。")])])]),t._v(" "),s("h3",{attrs:{id:"github-actions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-actions"}},[t._v("#")]),t._v(" GitHub Actions")]),t._v(" "),s("p",[t._v("现在我们写一篇文章并且发布到 "),s("strong",[t._v("GitHub Pags")]),t._v(" 需要手动执行sh脚本，使用"),s("strong",[t._v("GitHub Actions")]),t._v(" 可以帮助我们简化流程，让写完一篇文章后只需要将代码上传至 "),s("strong",[t._v("GitHub")]),t._v(" 就能帮我们自动构建部署到线上。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/features/actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub Actions"),s("OutboundLink")],1),t._v(" 是 GitHub 的"),s("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2015/09/continuous-integration.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("持续集成服务"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("持续集成（Continuous integration，简称CI）：频繁地（一天多次）将代码集成到主干。目的：就是让产品可以快速迭代，同时还能保持高质量。")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("持续集成由很多操作组成，比如抓取代码、运行测试、登录远程服务器，发布到第三方服务等等。GitHub 把这些操作就称为 actions。")])]),t._v(" "),s("li",[s("p",[t._v("GitHub Actions 最特别的地方：允许开发者把每个操作写成独立的脚本文件，存放到代码仓库，使得其他开发者可以引用。如果你需要某个 action，不必自己写复杂的脚本，直接引用他人写好的 action 即可，整个持续集成过程，就变成了一个 actions 的组合。")])]),t._v(" "),s("li",[s("p",[t._v("GitHub Actions 术语：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("workflow")]),t._v(" （工作流程）：持续集成一次运行的过程，就是一个 workflow。")]),t._v(" "),s("li",[s("strong",[t._v("job")]),t._v(" （任务）：一个 workflow 由一个或多个 jobs 构成，含义是一次持续集成的运行，可以完成多个任务。")]),t._v(" "),s("li",[s("strong",[t._v("step")]),t._v("（步骤）：每个 job 由多个 step 构成，一步步完成。")]),t._v(" "),s("li",[s("strong",[t._v("action")]),t._v(" （动作）：每个 step 可以依次执行一个或多个命令（action）。")])])]),t._v(" "),s("li",[s("p",[t._v("workflow 文件：GitHub Actions 的配置文件")]),t._v(" "),s("ul",[s("li",[t._v("文件后缀名统一为"),s("code",[t._v(".yml")]),t._v("，存放在代码仓库的"),s("code",[t._v(".github/workflows")]),t._v("目录。")]),t._v(" "),s("li",[t._v("一个库可以有多个 workflow 文件；")]),t._v(" "),s("li",[t._v("GitHub 只要发现"),s("code",[t._v(".github/workflows")]),t._v("目录里面有"),s("code",[t._v(".yml")]),t._v("文件，就会自动运行该文件。")])])])]),t._v(" "),s("ol",[s("li",[s("p",[t._v("在 GitHub 上创建个人访问令牌 ACCESS_TOKEN")])]),t._v(" "),s("li",[s("p",[t._v("编写 workflow 文件")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# name字段，表示 workflow 的名称。如果省略该字段，默认为当前 workflow 的文件名。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docs\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# on字段，指定触发 workflow 的条件，通常是某些事件。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 每当 push 到 main 分支时触发部署")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 手动触发部署")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("workflow_dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# jobs字段，表示要执行的一项或多项任务。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("docs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# runs-on字段，指定运行所需要的虚拟机环境。（必填字段）")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# steps字段，指定每个 Job 的运行步骤，可以包含一个或多个步骤。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v2\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# “最近更新时间” 等 git 日志相关信息，需要拉取全部提交记录")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fetch-depth")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Setup Node.js\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/setup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node@v1\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 选择要使用的 node 版本")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node-version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'14'")]),t._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 缓存 node_modules")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Cache dependencies\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/cache@v2\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" yarn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cache\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n            **/node_modules")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" runner.os "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("yarn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" hashFiles('"),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("**/yarn.lock')")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restore-keys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n            ${{ runner.os }}-yarn-")]),t._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果缓存没有命中，安装依赖")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Install dependencies\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" steps.yarn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cache.outputs.cache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("hit "),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!=")]),t._v(" 'true'\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" yarn\n\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行构建脚本")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Build VuePress site\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" yarn docs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("build\n\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 workflow 的文档来获取更多信息")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# @see https://github.com/crazy-max/ghaction-github-pages")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deploy to GitHub Pages\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" JamesIves/github"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pages"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deploy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action@3.7.1\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ACCESS_TOKEN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.ACCESS_TOKEN "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在 GitHub 上创建个人访问令牌 ACCESS_TOKEN")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署到 gh-pages 分支")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("BRANCH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pages\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署目录为 VuePress 的默认输出目录")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("FOLDER")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docs/.vuepress/dist\n")])])])]),t._v(" "),s("li",[s("p",[t._v("每次写完文章push代码，回到GitHub上点击actions，发现项目已经在自动构建了。")])])]),t._v(" "),s("h3",{attrs:{id:"遇到的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#遇到的问题"}},[t._v("#")]),t._v(" 遇到的问题")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("使用"),s("code",[t._v("npm run docs:dev")]),t._v("编写完文档后，需要运行"),s("code",[t._v("npm run docs:build")]),t._v("将其"),s("code",[t._v("build")]),t._v("打包，然后发布到服务器上。然而在"),s("code",[t._v("build")]),t._v("的过程中，报了如下的错误：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("ReferenceError: window is not defined\n    at Object.3897 (node_modules/xqh-vue-ui/dist/xqh-vue-ui.umd.min.js:1:75887)\n    at i (node_modules/xqh-vue-ui/dist/xqh-vue-ui.umd.min.js:1:91183)\n    at server-bundle.js:52124:92091\n    at server-bundle.js:52124:161769\n    at server-bundle.js:52124:161774\n    at server-bundle.js:52124:37\n    at Object.<anonymous> (node_modules/xqh-vue-ui/dist/xqh-vue-ui.umd.min.js:1:246)\n    at __webpack_require__ (webpack/bootstrap:25:0)\n    at Module.<anonymous> (server-bundle.js:129480:26)\n    at __webpack_require__ (webpack/bootstrap:25:0)\n    at Object.<anonymous> (server-bundle.js:52399:18)\n    at __webpack_require__ (webpack/bootstrap:25:0)\n    at server-bundle.js:118:18\n    at Object.<anonymous> (server-bundle.js:121:10)\n    at evaluateModule (/Users/xqh/program/xqh-frontend-project/xqh-vue-ui-doc/node_modules/vue-server-renderer/build.dev.js:7948:25)\n    at /Users/xqh/program/xqh-frontend-project/xqh-vue-ui-doc/node_modules/vue-server-renderer/build.dev.js:8000:26\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\nnpm ERR! xqh-vue-ui-doc@1.0.0 docs:build: `vuepress build docs`\nnpm ERR! Exit status 1\nnpm ERR! \nnpm ERR! Failed at the xqh-vue-ui-doc@1.0.0 docs:build script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /Users/xqh/.npm/_logs/2022-07-26T02_42_04_868Z-debug.log\n")])])]),s("ul",[s("li",[t._v("原因：vuepress build生成的静态文件都是通过node服务端渲染完成的。因此，当组件中不是在"),s("code",[t._v("beforeMount")]),t._v(" 或者 "),s("code",[t._v("mounted")]),t._v(" 钩子中访问浏览器 / DOM 的 API时，就会有问题。")]),t._v(" "),s("li",[t._v("解决：\n"),s("ul",[s("li",[t._v("对Markdown文件中引入的组件，使用内置的 "),s("code",[t._v("<ClientOnly>")]),t._v(" 组件包裹。（这一步不设置，会导致文档刷新后样式丢失！）")]),t._v(" "),s("li",[t._v("组件库的引入放在"),s("strong",[t._v("mounted")]),t._v("钩子中。")])])])])]),t._v(" "),s("li",[s("p",[t._v("发布到线上后发现css样式丢失，经查看发现访问路径发生404的有可能是项目引用路径错误，本文没有修改过打包路径，用的是默认路径 "),s("code",[t._v("docs/.vuepress/dist")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("本文所使用的actions版本是v3，以往教程中所讲到的使用的是"),s("code",[t._v("JamesIves/github-pages-deploy-action")]),t._v(" v2版本，新版本语法已经发生了变化，如果继续使用就会发生错误。")])]),t._v(" "),s("li",[s("p",[t._v("ACCESS_TOKEN 一定要和github上的sectets上的名称相同。")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);